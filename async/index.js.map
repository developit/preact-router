{"version":3,"file":"index.js","sources":["../src/AsyncRoute.js"],"sourcesContent":["import { h, Component } from 'preact';\n\nclass AsyncRoute extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tcomponentData: null\n\t\t};\n\t}\n\tcomponentDidMount(){\n\t\tconst componentData = this.props.component(this.props.url, ({component}) => {\n            // Named param for making callback future proof\n\t\t\tif (component) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tcomponentData: component\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\t// In case returned value was a promise\n\t\tif (componentData && componentData.then) {\n\t\t\tcomponentData.then(component => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tcomponentData: component\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}\n\trender(){\n\t\treturn this.state.componentData ?\n\t\t\th(this.state.componentData, { url: this.props.url, matches: this.props.matches }) :\n\t\t\tnull;\n\t}\n}\n\nexport default AsyncRoute;"],"names":["AsyncRoute","state","componentDidMount","componentData","props","component","url","setState","then","render","h","matches","Component"],"mappings":";;;;;;;;;;;;AAAA,IAEMA;;;uBACS;;;+CACb,qBADa;;QAERC,KAAL,GAAa;kBACG;GADhB;;;;sBAIDC,iDAAmB;;;MACZC,gBAAgB,KAAKC,KAAL,CAAWC,SAAX,CAAqB,KAAKD,KAAL,CAAWE,GAAhC,EAAqC,gBAAiB;OAAfD,SAAe,QAAfA,SAAe;;;OAEvEA,SAAJ,EAAe;WACTE,QAAL,CAAc;oBACEF;KADhB;;GAHoB,CAAtB;;;MAUIF,iBAAiBA,cAAcK,IAAnC,EAAyC;iBAC1BA,IAAd,CAAmB,qBAAa;WAC1BD,QAAL,CAAc;oBACEF;KADhB;IADD;;;;sBAOFI,2BAAQ;SACA,KAAKR,KAAL,CAAWE,aAAX,GACNO,SAAE,KAAKT,KAAL,CAAWE,aAAb,EAA4B,EAAEG,KAAK,KAAKF,KAAL,CAAWE,GAAlB,EAAuBK,SAAS,KAAKP,KAAL,CAAWO,OAA3C,EAA5B,CADM,GAEN,IAFD;;;;EA3BuBC,kBAiCzB;;;;"}